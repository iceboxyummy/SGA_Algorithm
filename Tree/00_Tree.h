#pragma once

/*
	※ 트리(Tree)
		ㄴ 2차원 자료구조 -> 비선형 구조
		ㄴ 삽입, 삭제, 탐색 모두 준수하다. -> 많이 사용함
		ㄴ 특정 노드로 가는 길이 하나이다. -> 여러개인 경우는 그래프
		ㄴ 링크의 개수는 노드의 개수보다 무조건 하나가 적다.

	※ 트리 용어 정리
		ㄴ 노드(node) : 트리를 구성하는 원소
			- 루트 노드(root node)		: 트리의 최상위 노드, 시작점
			- 부모 노드(parent node)		: 자식을 가지는 노드, 자신을 링크한 노드
			- 자식 노드(child node)		: 자신이 링크한 노드
			- 형제 노드(sibling node)	: 같은 부모를 가진 노드
			- 잎새 노드(leaf node)		: 자식이 없는 노드, 단말 노드(external node)라고 부르기도함
			- 내부 노드(internal node)	: 단말 노드가 아닌 노드

		ㄴ 간선(edge)					: 노드 끼리의 연결선, link라고도 부른다.
		ㄴ 차수(degree)					: 각 노드가 가지는 자식의 개수
		ㄴ 트리의 차수(degree of tree)	: 트리의 최대 차수
		ㄴ 레벨(level)					: 루트 노드로부터 얼마나 떨어져 있는가? 논문에따라 root가 0일수도 있고 1일수도 있음, 0인 경우가 많다.
		ㄴ 높이(Height)					: 트리의 최대 레벨

	※ 트리 순회
		ㄴ 트리의 각 노드를 겹치지 않고 어떤 순서로 접근할 것인가?
		ㄴ 전위 순회(pre-order)	: root - left - right
		ㄴ 중위 순회(in-order)	: left - root - right
		ㄴ 후위 순회(post-order)	: left - right - root

	※ 트리 종류
		ㄴ 여기서 레벨은 root -> 1로 정의한다.

		ㅁ 정 이진트리(Full Binary Tree)
			ㄴ잎새 노드를 제외한 모든 노드가 자식 노드를 2개 또는 0개를 가지는 트리

			ㄴI가 내부노드의 개수라고 했을때
				- 잎새노드의 개수는 I + 1개
				- 총 노드의 개수 2I + 1 개

			ㄴ 정 이진트리에 총 N개의 노드가 있을때
				- 총 내부 노드의 개수 (N - 1) / 2
				- 총 잎새 노드의 개수 (N + 1) / 2

			ㄴ 정 이진트리에 L개의 잎새 노드가 있을때
				- 총 노드의 개수 2L - 1
				- 총 내부 노드의 개수 L - 1

		ㅁ 포화 이진트리(Perfect Binary Tree)
			ㄴ 잎새노드의 깊이가 모두 같고 각 노드들이 2개의 자식을 가지는 트리

			ㄴ 높이가 h일때
				- 총 노드의 개수 :2^h - 1

		ㅁ 완전 이진트리(Complete Binary Tree)
			ㄴ 마지막 레벨을 제외한 모든 레벨에서 노드들이 가득 찬 이진트리, 다만, 노드들은 삽입될때 트리의 왼쪽부터 채워져야함.
			ㄴ 차례대로 데이터를 채워넣기 때문에 빈 공간이 없어 배열로 구현하기도 함
			ㄴ 높이가 h일때
				- 노드의 개수 : 2^(h - 1) ~ 2^h - 1

			ㄴ 노드의 개수가 N일때
				- 완전 이진트리의 높이는 ceil(log2(N + 1))
*/